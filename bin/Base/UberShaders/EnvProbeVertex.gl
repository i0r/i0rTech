#version 430 core

#include UBO/Common.gl

layout(location = 0) in vec3 bPosition;
layout(location = 1) in vec2 bTexCoordinates;
layout(location = 2) in vec3 bNormals;

#ifdef TEXTURE_NORMAL
 layout(location = 3) in vec3 bTangents;
 layout(location = 4) in vec3 bBiTangents;
#endif

uniform mat4 	 uModel;
uniform mat4 	 uView;
uniform float 	uDirection;

layout( location = 0 ) out vec2 	vTexCoords;
layout( location = 1 ) out float vClip;

void main() {
 vTexCoords = bTexCoordinates;
 
 vec4 vNonprojected = uView * uModel * vec4( bPosition, 1.0 );
 
 vNonprojected 	 /= vNonprojected.w;
 vNonprojected.z  = vNonprojected.z * uDirection;
 
 float L = length( vNonprojected.xyz );
 vNonprojected = vNonprojected / L;
 
 vClip = vNonprojected.z;
 vNonprojected.z = vNonprojected.z + 1.0;
 
 vNonprojected.x = vNonprojected.x / vNonprojected.z;
 vNonprojected.y = vNonprojected.y / vNonprojected.z;
 vNonprojected.z = ( L - Common.NearPlane ) / ( Common.FarPlane - Common.NearPlane );
 
 vNonprojected.w = 1;
 
 gl_Position = vNonprojected;
}
